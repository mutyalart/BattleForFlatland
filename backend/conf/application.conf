# https://www.playframework.com/documentation/latest/Configuration

include "dev.conf"
include "bff.conf"
include "databases.conf"

debug = true

apiPrefix = api


play.http.secret.key = ${?APPLICATION_SECRET}

play.evolutions.autoApply = true

play.modules.enabled += "tasks.TasksModule"
play.modules.enabled += "modules.ActorModule"


## CSRF Filter
# https://www.playframework.com/documentation/latest/ScalaCsrf#Applying-a-global-CSRF-filter
# https://www.playframework.com/documentation/latest/JavaCsrf#Applying-a-global-CSRF-filter
# ~~~~~
# Play supports multiple methods for verifying that a request is not a CSRF request.
# The primary mechanism is a CSRF token. This token gets placed either in the query string
# or body of every form submitted, and also gets placed in the users session.
# Play then verifies that both tokens are present and match.
csrf {
  cookie.name = "Csrf-Token"

  # Sets the cookie to be sent only over HTTPS
  #cookie.secure = true
}


# Requests are forwarded by heroku, so we can allow anything
play.filters.hosts {
  allowed = ["."]
}

play.http {
  session {
    maxAge = 172800000
  }
}

hikaricp {
  minimumIdle = 1
  maximumPoolSize = 1
}


superUser {
  name = sherpal
  mail = "antoine.doeraene@gmail.com"
  password = ${?ADMIN_PASSWORD}  # environment variable that should not be committed to git...
}
